name: Java CI/CD Pipeline with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'  # Changed from 'adopt' to 'temurin'
          cache: maven
          cache-dependency-path: spring-petclinic/pom.xml  # Important: specify path to pom.xml

      - name: Change to spring-petclinic directory
        working-directory: ./spring-petclinic  # Important: all subsequent steps run in this directory
        run: pwd  # Just to verify

      - name: Grant execute permission for Maven wrapper
        working-directory: ./spring-petclinic
        run: chmod +x mvnw

      - name: Build and test with Maven Wrapper
        working-directory: ./spring-petclinic
        run: ./mvnw clean verify

      - name: Run SonarQube analysis
        working-directory: ./spring-petclinic
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          ./mvnw -B verify 
          ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=sonarqube-java-ci-cd \
            -Dsonar.projectName='SonarQube Java CI/CD Demo'

  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

      - name: Copy JAR to EC2 and deploy
        run: |
          scp -o StrictHostKeyChecking=no spring-petclinic/target/spring-petclinic-*.jar ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} \
            "sudo apt update && sudo apt install -y openjdk-17-jre"
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} \
            "fuser -k 8080/tcp || true"
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} \
            "nohup java -jar /home/ubuntu/spring-petclinic-*.jar > /dev/null 2>&1 &"