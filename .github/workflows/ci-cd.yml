name: SonarQube Java CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sonarqube-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          # REMOVE THIS LINE: cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            spring-petclinic/target
          key: maven-${{ hashFiles('spring-petclinic/pom.xml') }}
          restore-keys: |
            maven-

      - name: Navigate to project and set permissions
        working-directory: ./spring-petclinic
        run: |
          pwd
          ls -la
          chmod +x mvnw

      - name: Run tests with Maven
        working-directory: ./spring-petclinic
        run: ./mvnw clean test -B

      - name: SonarQube Scan
        working-directory: ./spring-petclinic
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          ./mvnw -B verify sonar:sonar \
            -Dsonar.projectKey=donatus-sonarqube \   # <-- use your real project key here
            -Dsonar.projectName="Donatus SonarQube" \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Build JAR file
        working-directory: ./spring-petclinic
        run: ./mvnw -B package -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-petclinic-jar
          path: spring-petclinic/target/*.jar
          retention-days: 1

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: sonarqube-analysis
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download built JAR
        uses: actions/download-artifact@v4
        with:
          name: spring-petclinic-jar
          path: artifacts

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2
        run: |
          scp -o StrictHostKeyChecking=no artifacts/*.jar ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/

          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            if ! command -v java &> /dev/null; then
              sudo apt update && sudo apt install -y openjdk-17-jre
            fi
            sudo pkill -f "java.*spring-petclinic" || true
            sleep 2
            nohup java -jar /home/ubuntu/spring-petclinic-*.jar \
              --server.port=8080 \
              > /home/ubuntu/app.log 2>&1 &
            echo "Application deployed successfully"
          EOF